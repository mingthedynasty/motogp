package com.season {	  import flash.display.Sprite;  import flash.display.StageAlign;  import flash.display.StageScaleMode;  import flash.text.*;  import flash.events.*;  import flash.utils.*;  import com.season.data.*;  import com.season.models.*;  import com.season.classes.header.*;  import com.season.classes.season.*;  import com.season.classes.race.*;  import com.season.classes.tooltip.*;  import com.season.classes.*;  import com.season.utils.*;  /**********************   *    * MotoGP - MAIN   *   **********************/	  public class MotoGP extends Sprite {            /**********************     * VARIABLES           **********************/    private var seasonToRace:SeasonToRaceTransition;    private var raceToSeason:RaceToSeasonTransition;    private var header:Header = new Header();    private var race:Race = new Race();    private var season:Season;    private var loader:LoaderBox;    private var dataFrom:TextField;    private var loadTimer:Timer = new Timer(750, 1);    private var isFirst:Boolean = true;    public var currentView:String = "season";    //----//    //public static const SEASON_SIZE_FACTOR:int = 1;    public static const VIEW_CHANGE:String = "viewChange";    public static const SEASON_CHANGE:String = "seasonChange";    public static const SEASON_YEAR:String = "2008";   /**********************     * CONSTRUCTOR     **********************/    public function MotoGP() {            var format:TextFormat =         TextFactory.createTextFormat(TextStyle.PLAIN, 0x888888);      dataFrom = TextFactory.createText(format);      loader = new LoaderBox(this);      stage.align = StageAlign.TOP_LEFT;      stage.scaleMode = StageScaleMode.NO_SCALE;      //load series      DataService.getInstance().addEventListener(DataService.DATA_LOAD_SERIES,                                                 onSeriesLoad);            DataService.getInstance().loadSeries();    }    /**********************     * PUBLIC     **********************/        public function transitionToRace():void {      startShowLoader();      DataService.getInstance().addEventListener(DataService.DATA_LOAD_RACE,                                                 onRaceLoad);      DataService.getInstance().loadRace(YearChooser.getInstance().currYear,                                          RaceChooser.getInstance().currRaceModel.shortName);       RaceChooser.getInstance().addEventListener(RaceChooser.RACE_SELECTED,                                                 onRaceSelected);    }    //--------//    public function raceToTransition():void {      raceToSeason.start();      currentView = "season";      DataService.getInstance().removeEventListener(DataService.DATA_LOAD_RACE,                                                    onRaceLoad);      RaceChooser.getInstance().removeEventListener(RaceChooser.RACE_SELECTED,                                                    onRaceSelected);    }   /**********************    * PRIVATE     **********************/        private function startShowLoader():void {      loadTimer.addEventListener(TimerEvent.TIMER, onShowLoader);      loadTimer.start();    }    private function stopShowLoader():void {      loadTimer.removeEventListener(TimerEvent.TIMER, onShowLoader);      if (currentView == "race") {        race.riders.tween("alpha", 0);      }      loader.hide();    }   /**********************     * HANDLERS     **********************/        private function onSeriesLoad(e:LoadDataEvent):void {      SeriesModel.getInstance().initModel(e.xml);            var years:XMLList = SeriesModel.getInstance().yearList;      var latest:String = years[years.length() - 1];      //header      header.visible = false;      addChild(header);      header.initHeader();      //events      YearChooser.getInstance().addEventListener(YearChooser.YEAR_SELECTED,                                                 onYearSelected);      //load season data      DataService.getInstance().addEventListener(DataService.DATA_LOAD_SEASON,                                                 onSeasonLoad);            DataService.getInstance().loadSeason(latest);     }    //--------//    private function onSeasonLoad(e:LoadDataEvent):void {      SeasonModel.getInstance().initModel(e.xml);            if (isFirst) {        RaceChooser.getInstance().initChooser();        header.update();        header.visible = true;        //season        season = new Season();        addChild(season);                season.initSeason();                        //transitions        seasonToRace = new SeasonToRaceTransition(season, race);        raceToSeason = new RaceToSeasonTransition(season, race);                //data from        dataFrom.text = "DATA COURTESY OF " +           SeriesModel.getInstance().dataSource.toUpperCase();        addChild(dataFrom);        //tooltip        addChild(RaceTooltip.getInstance());        addChild(RiderRaceTooltip.getInstance());        addChild(RiderLapTooltip.getInstance());        addChild(RiderTooltip.getInstance());        addChild(RaceInfoTooltip.getInstance());                //events        season.addEventListener(Season.HIDE_SUMMARIES_FINISH, onHideSummaries);        stage.addEventListener(Event.RESIZE, onStageResize);        onStageResize(null);                isFirst = false;      } else {        stopShowLoader();        season.hideSummaries();      }      dispatchEvent(new Event(SEASON_CHANGE));    }        //--------//    private function onRaceLoad(e:LoadDataEvent):void {      //hide loader      stopShowLoader();      RaceModel.getInstance().initModel(e.xml);            if (currentView == "season") {        if (!contains(race)) {          addChild(race);        }        setChildIndex(race, 0);              seasonToRace.start();              currentView = "race";        dispatchEvent(new Event(VIEW_CHANGE));      } else {        race.showNewRace();      }    }    //--------//    private function onRaceSelected(e:RaceEvent):void {      //show loader      startShowLoader();      DataService.getInstance().loadRace(YearChooser.getInstance().currYear,                                          e.model.shortName);    }        //--------//    private function onYearSelected(e:Event):void {      //season.initSeason();      startShowLoader();      DataService.getInstance().loadSeason(YearChooser.getInstance().currYear);     }    //--------//    private function onStageResize(e:Event):void {      dataFrom.x = stage.stageWidth - dataFrom.width;      dataFrom.y = stage.stageHeight - dataFrom.height;    }    //--------//    private function onShowLoader(e:Event):void {      loader.show();    }    //--------//    private function onHideSummaries(e:Event):void {      RaceChooser.getInstance().initChooser();      //season      season.initSeason();    }  }}